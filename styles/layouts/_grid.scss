@use "sass:math";

$grid-columns: 12;
$grid-rows: 8;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px
);
$layout-values: flex-start, flex-end, center, space-between, space-around;

//base layout classes
.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
}

main.container {
    margin-bottom: $wide-margin;
    margin-top: $wide-margin / 2;
    min-height: 75vw;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

.align-self-center {
    @include align-self(center);
}

.flex-dir-row {
    flex-direction: row;
}

.p-container-regular {
    @include paragraph-container($regular-paragraph);
}

.p-container-medium {
    @include paragraph-container($medium-paragraph)
}

.p-container-wide {
    @include paragraph-container($wide-paragraph)
}

.text-container-wide-centered {
    @include paragraph-container($xl-wide-paragraph);
    @include align-self(center);
}

.text-container-extra-wide-centered {
    @include paragraph-container($xxl-wide-paragraph);
    @include align-self(center);
}

.text-container-wide-left {
    @include paragraph-container($xl-wide-paragraph);
    @include align-self(flex-start);
}

.text-container-extra-wide-left {
    @include paragraph-container($xxl-wide-paragraph);
    @include align-self(flex-start);
    @include md;
    @media (min-width: map-get($breakpoints, "md")) {
        margin: 0 $wide-margin;
    }
}

//grid gaps, example class in html: gap-2 
@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

//justify content classes, example class in html: justify-center
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

//align content classes, example class in html: align-center
@each $val in $layout-values {
    .align-#{$val} {
        align-content: $val;
    }
}

//col classes
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

.card-test {
    width: auto;
    height: 100px;
    background-color: $secondary-color;
    padding: $base-padding;
    display: flex;
    align-items: center;
}